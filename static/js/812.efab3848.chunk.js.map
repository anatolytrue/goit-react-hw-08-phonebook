{"version":3,"file":"static/js/812.efab3848.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"phonebookForm\":\"ContactForm_phonebookForm__KwlhY\",\"phonebookLabel\":\"ContactForm_phonebookLabel__WpDsn\",\"phonebookInput\":\"ContactForm_phonebookInput__SkYR2\",\"phonebookBtnAdd\":\"ContactForm_phonebookBtnAdd__0dp0M\"};","import { useState, useEffect} from \"react\";\n// import { nanoid } from 'nanoid';\n// import { getContacts } from 'redux/selectors';\n// import { addContact } from \"redux/contactsSlice\";\nimport { useAddContactMutation, useFetchContactsQuery } from \"redux/contacts/contactsAPI\";\n// import { useDispatch} from 'react-redux';\nimport css from './ContactForm.module.css';\nimport Loader from \"components/Loader/Loader\";\nimport { toast } from \"react-toastify\";\n\n\nexport default function ContactForm() {\n\n    const [name, setName] = useState('');\n    const [phone, setPhone] = useState('');\n\n    const {data} = useFetchContactsQuery();\n    const [addContactApi, {isLoading, isSuccess, isError, error}] = useAddContactMutation();\n    // console.log(useAddContactMutation());\n    // const dispatch = useDispatch();\n\n    // const handleAddContact = ({ name, phone }) => {\n    //     const newContact = {\n    //         id: nanoid(),\n    //         name,\n    //         phone,\n    //         };\n    //     data.find(contact => newContact.name.toLowerCase() === contact.name.toLowerCase())\n    //         ? alert(`${newContact.name} is already in contacts`)\n    //         : addContactApi(newContact) && reset();\n    // }\n\n    const handleChange = (e) => {\n        const { name, value } = e.currentTarget;\n        switch (name) {\n            case \"name\":\n                setName(value);\n                break;\n            case \"phone\":\n                setPhone(value);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        data.some(contact => contact.name === name)\n            ? alert(`${name} is already in contacts`)\n            : addContactApi({\n                name: name,\n                phone: phone,\n            });\n        setName('');\n        setPhone('');\n        // handleAddContact({name, phone});\n        // reset();\n    };\n\n    // const reset = () => {\n    //     setName('');\n    //     setPhone('');\n    // }\n\n    useEffect(() => {\n    isSuccess &&\n        toast.success('Contact added successfully', {\n            position: \"top-center\",\n            autoClose: 3000\n        });\n    if (isError && error?.originalStatus === 404) {\n        toast.error(\"Sorry, we can't find this page\", {\n            position: \"top-center\",\n            autoClose: 3000\n        });\n    } else if (isError && error?.status === 'FETCH_ERROR') {\n        toast.error('Internet is disconnected', {\n            position: \"top-center\",\n            autoClose: 3000\n        });\n    } else if (isError) {\n        toast.error('Something went wrong, please try again later', {\n            position: \"top-center\",\n            autoClose: 3000\n        });\n    }\n    }, [\n        isSuccess,\n        isError,\n        error?.originalStatus,\n        error?.status,\n    ]);\n\n\n    return (\n            <form className={css.phonebookForm} onSubmit={handleSubmit}>\n                <label className={css.phonebookLabel} >\n                Name\n                    <input\n                        className={css.phonebookInput}\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        onChange={handleChange}\n                        required\n                    />\n                    <input\n                        type=\"tel\"\n                        name='phone'\n                        value={phone}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        onChange={handleChange}\n                    />\n                    \n                    <button\n                            type='submit'\n                            className={css.phonebookBtnAdd}>\n                        {isLoading ? <Loader/> : 'Add contact'}\n                    </button>\n                </label>\n            </form>\n        )\n\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookContactList\":\"ContactList_phonebookContactList__4DuT2\",\"phonebookContactListItem\":\"ContactList_phonebookContactListItem__QCo+5\",\"phonebookContactListBtn\":\"ContactList_phonebookContactListBtn__SuWUk\"};","import Loader from 'components/Loader/Loader';\n\nimport { useDeleteContactMutation } from 'redux/contacts/contactsAPI';\nimport css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ContactItem({ contactId, name, number }) {\n    const [deleteContact, { isLoading }] = useDeleteContactMutation();\n    \n    const handleDeleteContact = contactId =>\n        deleteContact(contactId);\n    return (\n        <li className={css.phonebookContactListItem}>\n                <p>{name} : {number}</p>\n                <button type=\"button\"\n                    onClick={() => handleDeleteContact(contactId)}\n                    className={css.phonebookContactListBtn}\n                    disabled={isLoading}>\n                    {isLoading ? <Loader/> : \"Delete\"}\n                </button>\n        </li>\n    )\n}\n\nContactItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    contactId: PropTypes.string.isRequired,\n};","// import { useSelector } from 'react-redux';\nimport css from './ContactList.module.css';\n// import { deleteContact } from 'redux/contactsSlice';\nimport ContactItem from './ContactItem';\n// import {getFilter} from 'redux/contacts/selectors'\nimport { useFetchContactsQuery } from 'redux/contacts/contactsAPI';\nimport PropTypes from 'prop-types'\n\nexport default function ContactList({filter}) {\n\n    const {data } = useFetchContactsQuery();\n    // const { filter } = useSelector(state => getFilter(state));\n    // const [deleteContact, {isLoading}] = useDeleteContactMutation();\n    // const dispatch = useDispatch();\n    \n    const getVisibleContacts = () => {\n        const normalizedFilter = filter.toLowerCase().trim();\n        return data?.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter))\n    }\n    \n    // const handleDeleteContact = contactId =>\n    //     deleteContact(contactId);\n\n    const contactsList = getVisibleContacts();\n    console.log(contactsList)\n\n    return (\n        <ul className={css.phonebookContactList}>\n            {contactsList.map(({ id, name, phone }) => {\n                return (\n                    <ContactItem\n                        key={id}\n                        name={name}\n                        number={phone}\n                        contactId={id}\n                    />\n            )\n        }\n            \n        )}\n    </ul>\n    )\n}\n\nContactList.propTypes = {\n    filter: PropTypes.string.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\",\"phonebookFilterLabel\":\"Filter_phonebookFilterLabel__sABBp\"};","\n// import { useDispatch } from 'react-redux';\nimport css from './Filter.module.css';\nimport PropTypes from 'prop-types'\n// import { filterContacts } from 'redux/contacts/contactsSlice';\n// import {getFilter} from 'redux/selectors'\n\n\n\nfunction Filter({filter, handleChange}) {\n\n// const filter = useSelector(getFilter);\n// const dispatch = useDispatch();\n\n// const handleChangeFilter  = e => {\n//     dispatch(filterContacts(e.target.value));\n// }\n\n    return (\n        <label className={css.phonebookFilterLabel}>\n        Filter by name\n            <input\n                className={css.filterInput}\n                name=\"filter\"\n                type=\"text\"\n                value={filter}\n                onChange={handleChange}\n                placeholder=\"name surname\"\n            />\n    </label>\n    )\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n    filter: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired,\n};","import { useState } from 'react';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport  ContactList  from 'components/ContactList/ContactList';\nimport  Filter  from 'components/Filter/Filter';\n\n\nexport default function ContactsPage() {\n  const [filter, setFilter] = useState('');\n\n  const handleChange = e => {\n    setFilter(e);\n  };\n\n  return (\n    <div>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter filter={filter} handleChange={handleChange} />\n      <ContactList filter={filter} />\n    </div>\n  )\n}\n\n// export const Contacts = () => {\n//   const [showAddContact, setShowAddContact] = useState(null);\n\n//   const dispatch = useDispatch();\n\n//   const { data: contacts, isFetching, isLoading } = useGetContactsQuery();\n//   const [addContact, { status }] = useAddContactMutation();\n//   const filterState = useSelector(state => state.filter.value);\n\n//   const handleSubmitForm = contact => {\n//     contacts.find(\n//       item => item.name.toLowerCase() === contact.name.toLowerCase()\n//     )\n//       ? alert(` ${contact.name} is already in contacts`)\n//       : addContact(contact);\n//   };\n\n//   const changeFilter = e => {\n//     dispatch(filterContacts (e.currentTarget.value));\n//   };\n\n//   const normalFilter = filterState.toLowerCase();\n//   if (!contacts) {\n//     return;\n//   }\n\n//   const visibleContacts = contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalFilter)\n//   );\n//   return (\n//     <div>\n//       {status === 'pending' && <Loader />}\n//       <Filter\n//         value={filterState}\n//         onChange={changeFilter}\n//         setShowAddContact={setShowAddContact}\n//       />\n//       {showAddContact && (\n//         <ContactForm\n//           onSubmit={handleSubmitForm}\n//           setShowAddContact={setShowAddContact}\n//         />\n//       )}\n\n//       {isLoading && <Loader />}\n\n//       {!isFetching && contacts.length > 0 ? (\n//         <ContactList contacts={visibleContacts} />\n//       ) : (\n//         <h3>Please, add new contact</h3>\n//       )}\n//     </div>\n//   );\n// };\n"],"names":["ContactForm","useState","name","setName","phone","setPhone","data","useFetchContactsQuery","useAddContactMutation","addContactApi","isLoading","isSuccess","isError","error","handleChange","e","currentTarget","value","useEffect","toast","position","autoClose","originalStatus","status","className","css","onSubmit","preventDefault","some","contact","alert","type","pattern","title","onChange","required","Loader","ContactItem","contactId","number","useDeleteContactMutation","deleteContact","onClick","handleDeleteContact","disabled","ContactList","filter","contactsList","normalizedFilter","toLowerCase","trim","includes","getVisibleContacts","console","log","map","id","placeholder","ContactsPage","setFilter"],"sourceRoot":""}