{"version":3,"file":"static/js/589.bd77c0d8.chunk.js","mappings":"2LACA,EAA2B,yBAA3B,EAA6D,uB,SCG9C,SAASA,IACpB,OACI,iBAAKC,UAAWC,EAAhB,WACI,SAAC,MAAD,CAAWC,KAAK,KAAKF,UAAWC,IADpC,eAKP,C,wKCHc,SAASE,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEA,GAAwCN,EAAAA,EAAAA,WAAS,GAAjD,eAAOO,EAAP,KAAqBC,EAArB,KACA,GAAqDC,EAAAA,EAAAA,MAArD,eAAOC,EAAP,YAAsBC,EAAtB,EAAsBA,KAAMC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,UACjCC,GAAWC,EAAAA,EAAAA,MAUXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUhB,EAAoB,EAApBA,KAAMiB,EAAc,EAAdA,MACtC,OAAQjB,GACN,IAAK,OACH,OAAOC,EAAQgB,GACjB,IAAK,QACH,OAAOd,EAASc,GAClB,IAAK,WACH,OAAOZ,EAAYY,GACrB,QACE,OAEL,EASKC,EAAgB,mCAAG,WAAMC,GAAN,wEACvBA,EAAEC,iBADqB,SAEjBX,EAAa,CACjBT,KAAMA,EACNE,MAAOA,EACPE,SAAUA,IALW,OAOvBH,EAAQ,IACRE,EAAS,IACTE,EAAY,IATW,2CAAH,sDA8BtB,OAlBAgB,EAAAA,EAAAA,YAAU,WACJT,GACFC,GACES,EAAAA,EAAAA,IAAU,CACRC,KAAM,CAAEvB,KAAMU,EAAKa,KAAKvB,KAAME,MAAOQ,EAAKa,KAAKrB,OAC/CsB,MAAOd,EAAKc,QAInB,GAAE,CAACX,EAAUD,KAUZ,0BAEE,kBAAMa,SAAUP,EAAhB,WACE,8BACE,4HACA,kBACEQ,SAAUX,EACVY,KAAK,OACL3B,KAAK,OACLiB,MAAOjB,EACP4B,aAAa,MACbC,QAAQ,yHACRC,UAAQ,QAIZ,8BACE,qMACA,kBACEJ,SAAUX,EACVY,KAAK,QACL3B,KAAK,QACLiB,MAAOf,EACP0B,aAAa,MACbE,UAAQ,QAIZ,8BACE,+GAEE,2KACiC1B,EAAS2B,OAD1C,WAIF,kBACEL,SAAUX,EACVY,KAAOrB,EAAe,OAAS,WAC/BN,KAAK,WACLiB,MAAOb,EACPwB,aAAa,MACbE,UAAQ,EACRD,QAAQ,iBACRG,MAAM,qaAGR,mBACIC,QA1Ge,WACzB1B,GAAiBD,EAClB,EAyGW4B,YAvGe,SAACf,GAC1BA,EAAEC,gBACH,EAsGWe,KAAK,MAHT,+BAUF,mBACER,KAAK,SADP,SAEIhB,GAAY,SAAC,IAAD,IAAY,mGAKnC,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"iconSpin\":\"Loader_iconSpin__GgXJ2\",\"loader\":\"Loader_loader__P8ijB\"};","import { ImSpinner } from 'react-icons/im';\nimport css from './Loader.module.css'\n\n\nexport default function Loader() {\n    return (\n        <div className={css.loader}>\n            <ImSpinner size=\"16\" className={css.iconSpin} />\n            Loading...\n        </div>\n    )\n}","import { useDispatch } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\n// import { Link} from 'react-router-dom';\r\nimport { useRegisterUserMutation } from 'redux/auth/auth-operations';\r\nimport { setSignIn } from 'redux/auth/auth-slice';\r\nimport Loader from 'components/Loader/Loader';\r\n\r\n\r\nexport default function RegisterPage() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  // const navigate = useNavigate();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [registerUser, {data, isLoading, isSuccess}] = useRegisterUserMutation();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleHidePassword = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  // const handleShowPassword = () => {\r\n  //   setShowPassword(!showPassword);\r\n  // }\r\n  // const handleClickPassword = e => {\r\n  //   e.preventDefault();\r\n  // };\r\n\r\n  const handleSubmitForm = async e => {\r\n    e.preventDefault();\r\n    await registerUser({\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n    });\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('')\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      dispatch(\r\n        setSignIn({\r\n          user: { name: data.user.name, email: data.user.email },\r\n          token: data.token,\r\n        })\r\n      )\r\n    }\r\n  }, [dispatch, isSuccess])\r\n\r\n  // const handleSubmitForm = async (values, { resetForm }) => {\r\n  //   const user = await registerUser(values).unwrap();\r\n  //   dispatch(setCredentials(user));\r\n  //   navigate('/contacts');\r\n  //   resetForm();\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <form onSubmit={handleSubmitForm}>\r\n        <label>\r\n          <span>Введіть своє ім’я</span>\r\n          <input\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            autoComplete=\"off\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <span>Введіть свою електронну адресу</span>\r\n          <input\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            autoComplete=\"off\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <span>\r\n            Введіть пароль\r\n            <span>\r\n              (мінімум 7 символів, ви ввели {password.length})\r\n            </span>\r\n          </span>\r\n          <input\r\n            onChange={handleChange}\r\n            type={ showPassword ? 'text' : 'password'}\r\n            name=\"password\"\r\n            value={password}\r\n            autoComplete=\"off\"\r\n            required\r\n            pattern=\"(?=.*\\d).{7,}\"\r\n            title=\"Пароль має містити мінімум 7 символів, цифри або малі букви латинського алфавіту\"\r\n            \r\n          />\r\n          <button\r\n              onClick={handleShowPassword}\r\n              onMouseDown={handleHidePassword}\r\n              edge=\"end\"\r\n          >\r\n            {/* {showPassword ? <VisibilityOff /> : <Visibility />} */}\r\n            show password\r\n          </button>\r\n        </label>\r\n\r\n        <button\r\n          type=\"submit\">\r\n          { isLoading ? <Loader/> : 'Зареєструватися'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"names":["Loader","className","css","size","RegisterPage","useState","name","setName","email","setEmail","password","setPassword","showPassword","setShowPassword","useRegisterUserMutation","registerUser","data","isLoading","isSuccess","dispatch","useDispatch","handleChange","target","value","handleSubmitForm","e","preventDefault","useEffect","setSignIn","user","token","onSubmit","onChange","type","autoComplete","pattern","required","length","title","onClick","onMouseDown","edge"],"sourceRoot":""}