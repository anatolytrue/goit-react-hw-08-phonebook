{"version":3,"file":"static/js/451.4033e73a.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","../node_modules/nanoid/index.browser.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"iconSpin\":\"Loader_iconSpin__GgXJ2\",\"loader\":\"Loader_loader__P8ijB\"};","import { ImSpinner } from 'react-icons/im';\nimport css from './Loader.module.css'\n\n\nexport default function Loader() {\n    return (\n        <div className={css.loader}>\n            <ImSpinner size=\"16\" className={css.iconSpin} />\n            Loading...\n        </div>\n    )\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookForm\":\"ContactForm_phonebookForm__qlYQz\",\"phonebookLabel\":\"ContactForm_phonebookLabel__pbLV3\",\"phonebookInput\":\"ContactForm_phonebookInput__+1oiZ\",\"phonebookBtnAdd\":\"ContactForm_phonebookBtnAdd__tkTMc\"};","import { useState} from \"react\";\nimport { nanoid } from 'nanoid';\n// import { getContacts } from 'redux/selectors';\n// import { addContact } from \"redux/contactsSlice\";\nimport { useAddContactMutation, useFetchContactsQuery } from \"redux/contacts/contactsAPI\";\n// import { useDispatch} from 'react-redux';\nimport css from './ContactForm.module.css';\nimport Loader from \"components/Loader/Loader\";\n\n\nexport default function ContactForm() {\n\n    const [name, setName] = useState('');\n    const [phone, setPhone] = useState('');\n\n    const {data} = useFetchContactsQuery();\n    const [addContact, {isLoading}] = useAddContactMutation();\n    // console.log(useAddContactMutation());\n    // const dispatch = useDispatch();\n\n    const handleAddContact = ({ name, phone }) => {\n        const newContact = {\n            id: nanoid(),\n            name,\n            phone,\n            };\n        data.find(contact => newContact.name.toLowerCase() === contact.name.toLowerCase())\n            ? alert(`${newContact.name} is already in contacts`)\n            : addContact(newContact) && reset();\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.currentTarget;\n        switch (name) {\n            case \"name\":\n                setName(value);\n                break;\n            case \"phone\":\n                setPhone(value);\n                break;\n            default:\n                return;\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        handleAddContact({name, phone});\n        // reset();\n    }\n\n    const reset = () => {\n        setName('');\n        setPhone('');\n    }\n\n    return (\n            <form className={css.phonebookForm} onSubmit={handleSubmit}>\n                <label className={css.phonebookLabel} >\n                Name\n                    <input\n                        className={css.phonebookInput}\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        onChange={handleChange}\n                        required\n                    />\n                    <input\n                        type=\"tel\"\n                        name='phone'\n                        value={phone}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        onChange={handleChange}\n                    />\n                    \n                    <button\n                            type='submit'\n                            className={css.phonebookBtnAdd}>\n                        {isLoading ? <Loader/> : 'Add contact'}\n                    </button>\n                </label>\n            </form>\n        )\n\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookContactList\":\"ContactList_phonebookContactList__kpSVp\",\"phonebookContactListItem\":\"ContactList_phonebookContactListItem__0drQC\",\"phonebookContactListBtn\":\"ContactList_phonebookContactListBtn__CfZrR\"};","import Loader from 'components/Loader/Loader';\n\nimport { useDeleteContactMutation } from 'redux/contacts/contactsAPI';\nimport css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ContactItem({ contactId, name, number }) {\n    const [deleteContact, { isLoading }] = useDeleteContactMutation();\n    \n    const handleDeleteContact = contactId =>\n        deleteContact(contactId);\n    return (\n        <li className={css.phonebookContactListItem}>\n                <p>{name} : {number}</p>\n                <button type=\"button\"\n                    onClick={() => handleDeleteContact(contactId)}\n                    className={css.phonebookContactListBtn}\n                    disabled={isLoading}>\n                    {isLoading ? <Loader/> : \"Delete\"}\n                </button>\n        </li>\n    )\n}\n\nContactItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    contactId: PropTypes.string.isRequired,\n};","// import { useSelector } from 'react-redux';\nimport css from './ContactList.module.css';\n// import { deleteContact } from 'redux/contactsSlice';\nimport ContactItem from './ContactItem';\n// import {getFilter} from 'redux/contacts/selectors'\nimport { useFetchContactsQuery } from 'redux/contacts/contactsAPI';\nimport PropTypes from 'prop-types'\n\nexport default function ContactList({filter}) {\n\n    const {data } = useFetchContactsQuery();\n    // const { filter } = useSelector(state => getFilter(state));\n    // const [deleteContact, {isLoading}] = useDeleteContactMutation();\n    // const dispatch = useDispatch();\n    \n    const getVisibleContacts = () => {\n        const normalizedFilter = filter.toLowerCase().trim();\n        return data.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter))\n    }\n    \n    // const handleDeleteContact = contactId =>\n    //     deleteContact(contactId);\n\n    const contactsList = getVisibleContacts();\n    console.log(contactsList)\n\n    return (\n        <ul className={css.phonebookContactList}>\n            {contactsList.map(({ id, name, phone }) => {\n                return (\n                    <ContactItem\n                        key={id}\n                        name={name}\n                        number={phone}\n                        contactId={id}\n                    />\n            )\n        }\n            \n        )}\n    </ul>\n    )\n}\n\nContactList.propTypes = {\n    filter: PropTypes.string.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__HtQxw\",\"phonebookFilterLabel\":\"Filter_phonebookFilterLabel__GI5xv\"};","\n// import { useDispatch } from 'react-redux';\nimport css from './Filter.module.css';\nimport PropTypes from 'prop-types'\n// import { filterContacts } from 'redux/contacts/contactsSlice';\n// import {getFilter} from 'redux/selectors'\n\n\n\nfunction Filter({filter, handleChange}) {\n\n// const filter = useSelector(getFilter);\n// const dispatch = useDispatch();\n\n// const handleChangeFilter  = e => {\n//     dispatch(filterContacts(e.target.value));\n// }\n\n    return (\n        <label className={css.phonebookFilterLabel}>\n        Filter by name\n            <input\n                className={css.filterInput}\n                name=\"filter\"\n                type=\"text\"\n                value={filter}\n                onChange={handleChange}\n                placeholder=\"name surname\"\n            />\n    </label>\n    )\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n    filter: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired,\n};","import  ContactForm  from 'components/ContactForm/ContactForm';\r\nimport  ContactList  from 'components/ContactList/ContactList';\r\nimport  Filter  from 'components/Filter/Filter';\r\nimport { useState } from 'react';\r\n\r\nexport default function ContactsPage() {\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const handleChange = e => {\r\n    setFilter(e);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter filter={filter} handleChange={handleChange} />\r\n      <ContactList filter={filter} />\r\n    </div>\r\n  )\r\n}\r\n\r\n// export const Contacts = () => {\r\n//   const [showAddContact, setShowAddContact] = useState(null);\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const { data: contacts, isFetching, isLoading } = useGetContactsQuery();\r\n//   const [addContact, { status }] = useAddContactMutation();\r\n//   const filterState = useSelector(state => state.filter.value);\r\n\r\n//   const handleSubmitForm = contact => {\r\n//     contacts.find(\r\n//       item => item.name.toLowerCase() === contact.name.toLowerCase()\r\n//     )\r\n//       ? alert(` ${contact.name} is already in contacts`)\r\n//       : addContact(contact);\r\n//   };\r\n\r\n//   const changeFilter = e => {\r\n//     dispatch(filterContacts (e.currentTarget.value));\r\n//   };\r\n\r\n//   const normalFilter = filterState.toLowerCase();\r\n//   if (!contacts) {\r\n//     return;\r\n//   }\r\n\r\n//   const visibleContacts = contacts.filter(contact =>\r\n//     contact.name.toLowerCase().includes(normalFilter)\r\n//   );\r\n//   return (\r\n//     <div>\r\n//       {status === 'pending' && <Loader />}\r\n//       <Filter\r\n//         value={filterState}\r\n//         onChange={changeFilter}\r\n//         setShowAddContact={setShowAddContact}\r\n//       />\r\n//       {showAddContact && (\r\n//         <ContactForm\r\n//           onSubmit={handleSubmitForm}\r\n//           setShowAddContact={setShowAddContact}\r\n//         />\r\n//       )}\r\n\r\n//       {isLoading && <Loader />}\r\n\r\n//       {!isFetching && contacts.length > 0 ? (\r\n//         <ContactList contacts={visibleContacts} />\r\n//       ) : (\r\n//         <h3>Please, add new contact</h3>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n"],"names":["Loader","className","css","size","nanoid","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","ContactForm","useState","name","setName","phone","setPhone","data","useFetchContactsQuery","useAddContactMutation","addContact","isLoading","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","newContact","find","contact","toLowerCase","alert","handleAddContact","type","pattern","title","onChange","required","ContactItem","contactId","number","useDeleteContactMutation","deleteContact","onClick","handleDeleteContact","disabled","ContactList","filter","contactsList","normalizedFilter","trim","includes","getVisibleContacts","console","log","map","placeholder","ContactsPage","setFilter"],"sourceRoot":""}