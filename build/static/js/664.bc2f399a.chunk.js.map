{"version":3,"file":"static/js/664.bc2f399a.chunk.js","mappings":"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","sources":["pages/LoginPage/LoginPage.jsx","../node_modules/@mui/icons-material/LoginRounded.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { useLoginUserMutation } from 'redux/auth/auth-operations';\r\nimport { setLogIn } from 'redux/auth/auth-slice';\r\nimport {\r\n  Button, TextField, Box,\r\n  CircularProgress, IconButton,\r\n  InputAdornment, OutlinedInput, InputLabel,\r\n  FormControl\r\n} from '@mui/material';\r\nimport LoginRoundedIcon from '@mui/icons-material/LoginRounded';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\n// import Loader from 'components/Loader/Loader';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\n  // const navigate = useNavigate();\r\n  // const [loginUser] = useLoginUserMutation();\r\n//   const dispatch = useDispatch();\r\n\r\n//   const handleSumbitForm = async (values, { resetForm }) => {\r\n//     const user = await loginUser(values).unwrap();\r\n//     dispatch(setCredentials(user));\r\n//     navigate('contacts');\r\n//     resetForm();\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>\r\n//         Please, login to access!\r\n//       </h2>\r\n//       <form>\r\n//         <ul>\r\n//           <li>\r\n//             <label htmlFor='email'>Email</label>\r\n//             <field name=\"email\" type=\"email\" />\r\n\r\n//           </li>\r\n//           <li></li>\r\n//           <li></li>\r\n//         </ul>\r\n//       </form>\r\n\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n// export default function LoginPage() {\r\n//   const navigate = useNavigate();\r\n//   const [loginUser] = useLoginUserMutation();\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const dispatch = useDispatch();\r\n\r\n//   const handleChange = ({ target: { name, value } }) => {\r\n//     switch (name) {\r\n//       case 'email':\r\n//         return setEmail(value);\r\n//       case 'password':\r\n//         return setPassword(value);\r\n//       default:\r\n//         return;\r\n//     }\r\n//   };\r\n\r\n// const handleSubmitForm = async (values, { resetForm }) => {\r\n//     const user = await loginUser(values).unwrap();\r\n//     dispatch(setCredentials(user));\r\n//     navigate('/contacts');\r\n//     resetForm();\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmitForm}>\r\n//         <label>\r\n//           <span>Введіть свою електронну адресу</span>\r\n//           <input\r\n//             onChange={handleChange}\r\n//             type=\"email\"\r\n//             name=\"email\"\r\n//             value={email}\r\n//             autoComplete=\"off\"\r\n//             required\r\n//           />\r\n//         </label>\r\n\r\n//         <label>\r\n//           <span>\r\n//             Введіть пароль\r\n//             <span>\r\n//               (мінімум 7 символів, ви ввели {password.length})\r\n//             </span>\r\n//           </span>\r\n//           <input\r\n//             onChange={handleChange}\r\n//             type=\"password\"\r\n//             name=\"password\"\r\n//             value={password}\r\n//             autoComplete=\"off\"\r\n//             required\r\n//             pattern=\"(?=.*\\d).{7,}\"\r\n//             title=\"Пароль має містити мінімум 7 символів, цифри або малі букви латинського алфавіту\"\r\n//           />\r\n//         </label>\r\n\r\n//         <button type=\"submit\">Авторизуватися</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [loginUser, { data, isLoading, isSuccess, isError, error }] = useLoginUserMutation();\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleHidePassword = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    await loginUser ({ email: email, password: password });\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      dispatch(\r\n        setLogIn({\r\n          user: { name: data.user.name, email: data.user.email },\r\n          token: data.token,\r\n        })\r\n      );\r\n      toast.success('You have logged in successfully!', {\r\n        position: \"top-center\",\r\n        autoClose: 3000\r\n      });\r\n    }\r\n\r\n    if (isError && error?.originalStatus === 400) {\r\n      toast.error (\"Sorry, we can't find this page!\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000\r\n      });\r\n    } else if (isError && error?.status === 'FETCH_ERROR') {\r\n      toast.error(\"Internet is disconnected\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000\r\n      });\r\n    } else if (isError) {\r\n      toast.error(\"Something went wrong, please try again later!\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000\r\n      });\r\n    }\r\n  },\r\n  [dispatch, data, isSuccess, isError, error?.originalStatus, error?.status]);\r\n\r\n  return (\r\n    <Box\r\n      component=\"form\"\r\n      onSubmit={handleSubmit}\r\n      sx={{\r\n        padding: '1.6rem',\r\n        maxWidth: '16rem',\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr',\r\n        gridGap: '0.4rem',\r\n        alignItems: 'baseline',\r\n      }}\r\n    >\r\n      <TextField\r\n        label=\"Mail\"\r\n        size=\"small\"\r\n        margin=\"normal\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel\r\n          htmlFor='outlined-adornment-password'\r\n          sx={{lineHeight: '2em'}}\r\n        >\r\n          Password\r\n        </InputLabel>\r\n        <OutlinedInput\r\n          id=\"outlined-adornment-password\"\r\n          type={showPassword ? 'text' : 'password'}\r\n          label=\"Password\"\r\n          name='password'\r\n          value={password}\r\n          onChange={handleChange}\r\n          size=\"small\"\r\n          endAdornment={\r\n            <InputAdornment position='end'>\r\n              <IconButton\r\n                aria-label='toggle password visibility'\r\n                onClick={handleShowPassword}\r\n                onMouseDown={handleHidePassword}\r\n                edge='end'\r\n              >\r\n                {showPassword ? <VisibilityOff/> : <Visibility/>}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n          sx={{m: '1rem 0', lineHeight: '4em'}}\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        variant=\"contained\"\r\n        type=\"submit\"\r\n        margin=\"normal\"\r\n        sx={{ width: '8 rem' }}\r\n        endIcon={\r\n          isLoading\r\n            ? (<CircularProgress size={16} thickness={4} color=\"inherit\" />)\r\n            : (<LoginRoundedIcon/>)\r\n        }\r\n      >\r\n        LogIn \r\n      </Button>\r\n    </Box>\r\n  )\r\n\r\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.3 7.7c-.39.39-.39 1.01 0 1.4l1.9 1.9H3c-.55 0-1 .45-1 1s.45 1 1 1h9.2l-1.9 1.9c-.39.39-.39 1.01 0 1.4.39.39 1.01.39 1.4 0l3.59-3.59c.39-.39.39-1.02 0-1.41L11.7 7.7a.9839.9839 0 0 0-1.4 0zM20 19h-7c-.55 0-1 .45-1 1s.45 1 1 1h7c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-7c-.55 0-1 .45-1 1s.45 1 1 1h7v14z\"\n}), 'LoginRounded');\n\nexports.default = _default;"],"names":["LoginPage","useState","email","setEmail","password","setPassword","showPassword","setShowPassword","dispatch","useDispatch","useLoginUserMutation","loginUser","data","isLoading","isSuccess","isError","error","handleSubmit","e","preventDefault","handleChange","target","name","value","useEffect","setLogIn","user","token","toast","position","autoClose","originalStatus","status","component","onSubmit","sx","padding","maxWidth","display","gridTemplateColumns","gridGap","alignItems","label","size","margin","type","onChange","required","variant","htmlFor","lineHeight","id","endAdornment","onClick","onMouseDown","edge","m","width","endIcon","thickness","color","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}